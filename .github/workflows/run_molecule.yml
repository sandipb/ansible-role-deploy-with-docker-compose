name: Run Molecule

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  molecule-test:
    name: Molecule Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    env:
      ANSIBLE_FORCE_COLOR: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync project dependencies
        run: uv sync

      - name: Record start time
        id: start_time
        run: echo "started_at=$(date +%s)" >> "$GITHUB_OUTPUT"

      - name: Run Molecule test suite
        id: run_molecule
        run: uv run molecule test

      - name: Record finish time
        if: always()
        id: finish_time
        run: echo "finished_at=$(date +%s)" >> "$GITHUB_OUTPUT"

      - name: Comment on PR with Molecule result
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const outcome = '${{ steps.run_molecule.outcome }}';
            const startedAt = Number.parseInt('${{ steps.start_time.outputs.started_at }}', 10);
            const finishedAt = Number.parseInt('${{ steps.finish_time.outputs.finished_at }}', 10);
            let durationText = 'an unknown duration';

            if (Number.isFinite(startedAt) && Number.isFinite(finishedAt) && finishedAt >= startedAt) {
              const totalSeconds = finishedAt - startedAt;
              const hours = Math.floor(totalSeconds / 3600);
              const minutes = Math.floor((totalSeconds % 3600) / 60);
              const seconds = totalSeconds % 60;
              const parts = [];
              if (hours) parts.push(`${hours}h`);
              if (minutes) parts.push(`${minutes}m`);
              parts.push(`${seconds}s`);
              durationText = parts.join(' ');
            }

            const qualifier = outcome === 'success' ? 'successfully' : 'unsuccessfully';
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const body = `Molecule test finished ${qualifier} in ${durationText}.\n\n[View run logs](${runUrl})`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body,
            });
